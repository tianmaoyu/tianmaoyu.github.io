{"version":3,"sources":["assets/Script/Core/AudioType.ts","assets/Script/Util/CCAsync.ts","assets/Script/Util/CCExtend.ts","assets/Script/2.Home/ChangeColorPolicy.ts","assets/Script/Util/CommonResult.ts","assets/Script/3.Room/Controller.Room.ts","assets/Script/2.Home/Data.Sprite.ts","assets/Script/Util/EventDispatcher.ts","assets/Script/Core/GameConfig.ts","assets/Script/Core/GlobalStatic.ts","assets/Script/2.Home/HoomEventCenter.ts","assets/Script/Util/Http.ts","assets/Script/Util/LocationStorage.ts","assets/Script/Util/Logger.ts","assets/Script/2.Home/Model.RoomEvent.ts","assets/Script/2.Home/Model.ShadowType.ts","assets/Script/Util/NotificationCenter.ts","assets/Script/Core/PlatformAuthorize.ts","assets/Script/Core/PlatformPlayerInfo.ts","assets/Script/Core/Resource.Audio.ts","assets/Script/Core/Resource.Config.ts","assets/Script/Core/Resource.Sprite.ts","assets/Script/Core/SpriteType.ts","assets/Script/Util/TTAsync.ts","assets/Script/Util/Network/WebSocket/TT_WebSocket.ts","assets/Script/Util/Network/XHR/TT_XHR.ts","assets/Script/2.Home/View.BallShadowLayer.ts","assets/Script/2.Home/View.BallShadow.ts","assets/Script/2.Home/View.Ball.ts","assets/Script/4.Data/View.Button.ts","assets/Script/2.Home/View.CollideShadowLayer.ts","assets/Script/2.Home/View.CollideShadow.ts","assets/Script/4.Data/View.Data.ts","assets/Script/2.Home/View.HomeRing.ts","assets/Script/2.Home/View.Home.ts","assets/Script/1.Index/View.Index.ts","assets/Script/3.Room/View.RoomRing.ts","assets/Script/3.Room/View.Room.ts","assets/Script/Util/Network/WS.ts","assets/Script/Util/Network/WebSocket/WX_WebSocket.ts","assets/Script/Util/Network/XHR/WX_XHR.ts","assets/Script/Util/Network/WebSocket/Web_WebSocket.ts","assets/Script/Util/Network/XHR/Web_XHR.ts","assets/Script/Util/Network/XHR.ts"],"names":["AudioType","exports","CCAsync","load","url","Promise","resolve","reject","cc","loader","err","texture","Node","prototype","find","value","this","path","typeOrName","getComponent","SpriteFrame","isOrigin","self","loadRes","spriteFrame","Model_ShadowType_1","require","ColorPolicy","[object Object]","random","Math","floor","ColorType","yellow","red","blue","dyellow","violet","green","RingPolicy","colorList","defaultColorList","colorType","index","indexOf","angle","getAngleByIndex","isContinue","type","shift","unshift","push","y","sin","PI","x","cos","v2","CommonResult","CodeStauts","RoomController","score","bestScore","ccclass","property","_decorator","DataSprite","DataSprite_1","Component","redBall","blueBall","yellowBall","violetBall","dyellowBall","greenBall","jump","btn","fail","Sprites","__decorate","AudioClip","default","EventCenter","emit","args","_i","arguments","length","arr","eventList","forEach","element","apply","on","listener","thisObject","off","len","i","splice","offAll","ProtocolType","EnvironmentType","PlatformType","GameConfig","Develop","game_url_develop_ws","Test","game_url_test_ws","Produce","game_url_produce_wss","game_url_develop_http","game_url_test_http","game_url_produce_https","get_Game_Http_Url","VersionStr","Move_FrameInterval","Json","Web","OpenId","SpeedMax","SpeedDefault","Speedmin","MinX","MinY","MaxX","MaxY","TopRadius","GameConfig_1","PlayerSelectTop","topSpriteIndex","playerTopIndex","IsPhoto","GenderType","PlayerInfo","GlobalStatic","info","Name","Adress","male","ID","name","_name","IsExit","UserInfo","PlayerTopIndex","IsAccelerated","HoomEventCenter","XHR_1","Http","get","XHRCreater","createInstance","getJSON_Async","post","data","post_Async","LocationStorage","key","Object","set","obj","Web_LocalStorage","localStorage","getItem","JSON","parse","setItem","stringify","Logger","any","console","EventType","NotificationCenter","eventTarget","EventTarget","defineProperty","instance","callback","target","arg1","arg2","arg3","arg4","arg5","GlobalStatic_1","Logger_1","PlatformAuthorize","PlatformAuthorize_1","getUserFromStorage","initAuthorize","node","destroy","WX","wx","getStorage","userInfoKey","res","wxBtnAuthorize","TT","tt","userinfo","setStorage","btnNode","web_get_palyerInfo","createAuthorizeBtn","createAuthorize_tt","get_Defualt_PlayerInfo","login","getSetting","getUserInfo","withCredentials","userInfo","UserNamePolice","nickName","city","setUserToStorage","btnSize","size","width","height","frameSize","view","getFrameSize","winSize","left","top","createUserInfoButton","text","style","lineHeight","backgroundColor","color","textAlign","fontSize","borderRadius","onTap","gender","UserPhotoUrl","avatarUrl","Province","province","City","PlatformPlayerInfo","AudioResource","clipArray","clip","AudioMap","audioType","toString","id","audioEngine","play","audioPool","setFinishCallback","onRemoveAudio","bind","audioId","pause","stop","resume","playMusic","Array","Map","CCAsync_1","TTAsync_1","ConfigController","raw","asset","asyncWrap","jsonAsset","SpriteRes","cacheSpriteFrame","SpriteFrameMap","getByNameKey","getByType","SpriteType","promise","then","catch","__awaiter","str","_a","sent","json","TTAsync","loginAsync","success","getgetSettingAsync","getUserInfoAsync","getSession","clientInfo","appid","secret","code","request","method","TT_WebSocket","open","socketCount","ttSocketTask","connectSocket","onOpen","socketOpen","socketMsgQueue","send","onClose","clear","onError","error","onMessage","msg","close","TT_XHR","getJSON","responseType","View_BallShadow_1","HoomEventCenter_1","Model_RoomEvent_1","BallShadowManager","shadowNodePool","NodePool","createBallShadow","onCreateShadow","recycleBallShadow","onRecycleShadow","shadowNode","put","position","instantiate","init","active","setParent","Data_Sprite_1","BallShadow","Sprite","getSpriteFrame","setPosition","scale","opacity","duration","tween","by","start","to","call","dt","destroyShadow","ChangeColorPolicy_1","Resource_Audio_1","AudioType_1","BallView","jumpHeight","jumpDuration","currentColor","intervalTime","runAction","setJumpAction","ballBgNode","jumpUpFinished","callFunc","onHighest","jumpUp","sequence","moveBy","easing","easeCubicActionOut","jumpDownFinished","onLowest","jumpDown","easeCubicActionIn","repeatForever","ballHighest","playByAudioType","ballLowest","getColorType","ballColorChange","ButtonView","View_CollideShadow_1","CollideShadowManager","recycleCollideShadow","CollideShadow","Controller_Room_1","DataView","homeButton","onGoHome","restartButton","onRestrart","shareButton","scoreLabel","Label","bestScoreLabel","startAnim","string","endAnim","scheduleOnce","setDeafult","director","loadScene","btnList","item","getPosition","mul","mulSelf","HomeRingView","currentColorType","onColorChange","onScaleRing","nextColorType","getAngle","delay","HomeView","sideNode","ringNode","playBtn","onPlay","loadResource","preloadScene","children","newPosition","loadResDir","audioProgress","audioComplete","textures","cacheAudioClip","completeCount","totalCount","IndexView","_super","__extends","_this","label","RoomRingView","targetAngle","curentAngle","angleSpeel","secondSpeel","ringColorType","ballColorType","onBallLowest","playLeft","onPlayLeft","playRight","onPlayRight","_angle","gainScore","jumpFail","differAngle","abs","RoomView","currentSocore","onGainScore","onJumpFail","leftBtn","rightBtn","scoreLable","scroe","oldPosition","leftPosition","rightPosition","WX_WebSocket_1","Web_WebSocket_1","TT_WebSocket_1","WSCreater","Web_WebSocket","WX_WebSocket","tcpNoDelay","onSocketOpen","onSocketClose","onSocketError","onSocketMessage","sendSocketMessage","closeSocket","WX_XHR","_webSocket","WebSocket","ByteBuffer","binaryType","onopen","event","webSocket","onerror","onmessage","message","onclose","wasClean","Web_XHR","xhr","XMLHttpRequest","onload","status","response","statusText","ev","ontimeout","setRequestHeader","responseText","log","Web_XHR_1","WX_XHR_1","TT_XHR_1"],"mappings":"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","sourcesContent":["export enum AudioType{\r\n    btn=\"btn\",\r\n    jump=\"jump\",\r\n    fail=\"fail\",\r\n}","export class CCAsync {\r\n\r\n    public static load(url): Promise<any> {\r\n        return new Promise<any>((resolve, reject) => {\r\n            cc.loader.load(url, function (err, texture) {\r\n                if (err) {\r\n                    reject(err);\r\n                } else {\r\n                    resolve(texture);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n}","\r\n/**方便子节点查找 */\r\ncc.Node.prototype.find = function (value) {\r\n  return cc.find(value, this);\r\n}\r\n\r\ncc.Node.prototype.find=function (path,typeOrName=null):any {\r\n  if(typeOrName){\r\n    return cc.find(path, this).getComponent(typeOrName);\r\n  }else{\r\n    return cc.find(path, this);\r\n  }\r\n}\r\n/**加载图片\r\n * url:\r\n * origin:是否远程\r\n */\r\ncc.SpriteFrame.prototype.load = function (url: string, isOrigin: boolean = false) {\r\n  let self = this;\r\n  if (isOrigin) {\r\n    cc.loader.load(url, function (err, texture) {\r\n      self = new cc.SpriteFrame(texture);\r\n    });\r\n\r\n  } else {\r\n    cc.loader.loadRes(url, cc.SpriteFrame, function (err, spriteFrame) {\r\n      self = spriteFrame\r\n    });\r\n  }\r\n}","import { ColorType } from './Model.ShadowType';\r\nimport { Logger } from '../Util/Logger';\r\nexport class ColorPolicy {\r\n    public static getColorType() {\r\n        var random = Math.floor(1 + (Math.random()) * 6);\r\n        if (random == 1) return ColorType.yellow;\r\n        if (random == 2) return ColorType.red;\r\n        if (random == 3) return ColorType.blue;\r\n        if (random == 4) return ColorType.dyellow;\r\n        if (random == 5) return ColorType.violet;\r\n        if (random == 6) return ColorType.green;\r\n    }\r\n}\r\n\r\nexport class RingPolicy {\r\n\r\n    public static defaultColorList: Array<ColorType> = [\r\n        ColorType.violet,\r\n        ColorType.dyellow,\r\n        ColorType.blue,\r\n        ColorType.red,\r\n        ColorType.yellow,\r\n        ColorType.green,\r\n    ];\r\n\r\n    public static colorList: Array<ColorType> = [\r\n        ColorType.violet,\r\n        ColorType.dyellow,\r\n        ColorType.blue,\r\n        ColorType.red,\r\n        ColorType.yellow,\r\n        ColorType.green,\r\n    ];\r\n\r\n\r\n    public static setDeafult(){\r\n        this.colorList=this.defaultColorList;\r\n    }\r\n\r\n    public static getAngle(colorType: ColorType) {\r\n        let index = RingPolicy.colorList.indexOf(colorType);\r\n        //Logger.info(\"更改前\"+RingPolicy.colorList)\r\n        let angle = RingPolicy.getAngleByIndex(index);\r\n        //重新放置\r\n        let isContinue = true;\r\n        while (isContinue) {\r\n            let type = RingPolicy.colorList.shift();\r\n            if (type == colorType) {\r\n                isContinue = false;\r\n                RingPolicy.colorList.unshift(type);\r\n            } else {\r\n                RingPolicy.colorList.push(type);\r\n            }\r\n        }\r\n        // Logger.info(\"更改后\"+RingPolicy.colorList)\r\n        // Logger.info(angle);\r\n        return angle;\r\n    }\r\n\r\n    public static getAngleByIndex(index: number) {\r\n\r\n        if (index == 0) return 0;\r\n        if (index == 1) return 60;\r\n        if (index == 2) return 120;\r\n        if (index == 3) return -180;\r\n        if (index == 4) return -120;\r\n        if (index == 5) return -60;\r\n    }\r\n\r\n\r\n    /*根据颜色得到淡出\r\n    的坐标位置*/\r\n    public static getPositionByColorType(colorType: ColorType) {\r\n        let index = RingPolicy.defaultColorList.indexOf(colorType);\r\n       \r\n        //普通坐标系下\r\n        let angle = 0\r\n        if (index == 0) angle = -90;\r\n        if (index == 1) angle = -150;\r\n        if (index == 2) angle = 150;\r\n        if (index == 3) angle = 90;\r\n        if (index == 4) angle = 30;\r\n        if (index == 5) angle = -30;\r\n        let y=Math.sin(angle*Math.PI/180);\r\n        let x=Math.cos(angle*Math.PI/180);\r\n        return cc.v2(x,y);\r\n    }\r\n}","export class CommonResult<T>{\r\n    public data: T\r\n    public code:CodeStauts\r\n    public msg:String\r\n}\r\n\r\nexport enum CodeStauts{\r\n    SUCCESS=0,\r\n    ERROR=1,\r\n    NO_DATA=2,\r\n    No_Authorize=3,\r\n}","\r\nexport class RoomController{\r\n\r\n    public static score:number=0;\r\n    public static bestScore:number=120;\r\n    \r\n}","import { ColorType } from './Model.ShadowType';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DataSprite extends cc.Component {\r\n\r\n    private static Sprites: DataSprite;\r\n    onLoad() {\r\n        DataSprite.Sprites = this;\r\n    }\r\n\r\n    public static getSpriteFrame(colorType: ColorType) {\r\n        if (colorType == ColorType.blue) return this.Sprites.blueBall;\r\n        if (colorType == ColorType.dyellow) return this.Sprites.dyellowBall;\r\n        if (colorType == ColorType.green) return this.Sprites.greenBall;\r\n        if (colorType == ColorType.red) return this.Sprites.redBall;\r\n        if (colorType == ColorType.violet) return this.Sprites.violetBall;\r\n        if (colorType == ColorType.yellow) return this.Sprites.yellowBall;\r\n    }\r\n\r\n    @property(cc.SpriteFrame)\r\n    redBall: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    blueBall: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    yellowBall: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    violetBall: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    dyellowBall: cc.SpriteFrame = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    greenBall: cc.SpriteFrame = null;\r\n\r\n    @property(cc.AudioClip)\r\n    jump: cc.AudioClip = null;\r\n\r\n    @property(cc.AudioClip)\r\n    btn: cc.AudioClip = null;\r\n\r\n    @property(cc.AudioClip)\r\n    fail: cc.AudioClip = null;\r\n}\r\n","/**\r\n * 自定义事件 注册分发\r\n */\r\nexport class EventCenter {\r\n    /**事件列表*/\r\n    private static eventList = {};\r\n    constructor() { }\r\n    /** \r\n     * 派发事件\r\n     * @param type 事件类型\r\n     * @param args 事件参数\r\n     */\r\n    public static emit(type: string, ...args: any[]): void {\r\n        let arr: Array<any> = this.eventList[type];\r\n        if (arr) {\r\n            arr.forEach(element => {\r\n                element[0].apply(element[1], args);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 监听事件\r\n     * @param type       事件类型\r\n     * @param listener   回调函数\r\n     * @param thisObject 回调执行对象\r\n     */\r\n    public static on(type: string, listener: Function, thisObject: any): void {\r\n        let arr: Array<any> = this.eventList[type];\r\n        if (!arr) {\r\n            arr = [];\r\n            this.eventList[type] = arr;\r\n        }\r\n        else {\r\n            arr.forEach(element => {\r\n                if (element[0] == listener && element[1] == thisObject) {\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n        arr.push([listener, thisObject]);\r\n    }\r\n\r\n    /**\r\n     * 移除事件\r\n     * @param type       事件类型\r\n     * @param listener   回调函数\r\n     * @param thisObject 回调执行对象\r\n     */\r\n    public static off(type: string, listener: Function, thisObject: any): void {\r\n        var arr: Array<any> = this.eventList[type];\r\n        if (arr) {\r\n            var len = arr.length;\r\n            for (var i = len - 1; i >= 0; i--) {\r\n                if (arr[i][0] == listener && arr[i][1] == thisObject) {\r\n                    arr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        if (arr && arr.length == 0) {\r\n            this.eventList[type] = null;\r\n            delete this.eventList[type];\r\n        }\r\n    }\r\n\r\n    public static offAll(){\r\n        this.eventList={};\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * 传输协议\r\n * ttbfc8c97520e23911\r\n * wx1bc779bbca1f3d17\r\n * 952466986@qq.com\r\n */\r\nexport enum ProtocolType {\r\n    Json = 1,\r\n    ByteBuffer = 2,\r\n}\r\n\r\n/**\r\n * 环境\r\n */\r\nexport enum EnvironmentType {\r\n    Develop = 1,\r\n    Test = 2,\r\n    Produce = 3,\r\n}\r\nexport enum PlatformType\r\n{\r\n    WX = 1,\r\n    TT = 2,\r\n    Web=3,\r\n}\r\n\r\nexport class GameConfig {\r\n\r\n    public static Move_FrameInterval=0.1;\r\n    public static ProtocolType: ProtocolType = ProtocolType.Json;\r\n\r\n    public static PlatformType: PlatformType = PlatformType.Web;\r\n\r\n    public static EnvironmentType: EnvironmentType = EnvironmentType.Test;\r\n  \r\n    public static OpenId=\"test\";\r\n    \r\n    public static VersionStr=\"1.0.2\";\r\n\r\n    /**移动速度 */\r\n    public static SpeedMax = 500;\r\n    public static SpeedDefault = 400;\r\n    public static Speedmin = 200;\r\n\r\n    /**地图边界 */\r\n    public static MinX = -1000;\r\n    public static MinY = -1000;\r\n    public static MaxX = 1000;\r\n    public static MaxY = 1000;\r\n    /**top 半径 */\r\n    public static TopRadius = 60;\r\n\r\n\r\n    public static get_Game_WS_Url() {\r\n        if (this.EnvironmentType == EnvironmentType.Develop) {\r\n            return this.game_url_develop_ws;\r\n        }\r\n        if (this.EnvironmentType == EnvironmentType.Test) {\r\n            return this.game_url_test_ws;\r\n        }\r\n        if (GameConfig.EnvironmentType == EnvironmentType.Produce) {\r\n            return this.game_url_produce_wss;\r\n        }\r\n    }\r\n\r\n    public static get_Game_Http_Url(): string {\r\n        if (this.EnvironmentType == EnvironmentType.Develop) {\r\n            return this.game_url_develop_http;\r\n        }\r\n        if (GameConfig.EnvironmentType == EnvironmentType.Test) {\r\n            return this.game_url_test_http;\r\n        }\r\n        if (GameConfig.EnvironmentType == EnvironmentType.Produce) {\r\n            return this.game_url_produce_https;\r\n        }\r\n\r\n    };\r\n\r\n    public static get_Apply_Room(): string {\r\n        return this.get_Game_Http_Url() + \"Game/ApplyRoom\"+\"?versionStr=\"+this.VersionStr;\r\n    }\r\n\r\n    private static game_url_develop_http = \"http://127.0.0.1:8081/\";\r\n    private static game_url_test_http = \"http://47.107.173.220:8081/\";\r\n    private static game_url_produce_https = \"https://www.ws-go.com/\";\r\n\r\n    private static game_url_develop_ws = \"ws://127.0.0.1:8082/ws?roomId=1\";\r\n    private static game_url_test_ws = \"ws://47.107.173.220:8082/ws?roomId=1\";\r\n    private static game_url_produce_wss = \"wss://www.ws-go.com/ws?roomId=1\";\r\n}\r\n\r\n\r\n\r\n","import { PlatformType } from \"./GameConfig\";\r\n\r\n\r\n\r\n// /**\r\n//  * 本地存储一下数据\r\n//  */\r\n// export class LocationStorage {\r\n\r\n//     constructor() {\r\n\r\n//     }\r\n\r\n//     public setObject(key: string, value: object) {\r\n\r\n//     }\r\n\r\n//     public getObjext(key: string) {\r\n\r\n//     }\r\n// }\r\n\r\nexport class PlayerSelectTop{\r\n     public static  topSpriteIndex:number=1;\r\n     public static  playerTopIndex:number=1;\r\n     public static  IsPhoto:boolean=false;\r\n     public static  photoSpriteFrame:cc.SpriteFrame;\r\n}\r\n\r\nexport enum GenderType{\r\n    male=1,\r\n    female=2\r\n}\r\n\r\nexport class PlayerInfo\r\n{\r\n    public  ID :string;\r\n\r\n    public  Name :string;\r\n\r\n    public  Adress :string;\r\n\r\n    public GenderType: GenderType\r\n\r\n    //public LevelType:LevelType\r\n   \r\n    public PlatformType: PlatformType\r\n  \r\n    public TopIndex:number;\r\n    public UserPhotoUrl:string;\r\n    public Province:string;\r\n    public City:string;\r\n}\r\n\r\n/**全局 变量名*/\r\nexport class GlobalStatic {\r\n\r\n    public static IsExit:boolean=false;\r\n    public static UserInfo:PlayerInfo =null;\r\n\r\n    public static ClientId: number;\r\n\r\n    public static RoomId: number;\r\n\r\n    public static PlayerTopIndex = 1;\r\n\r\n    /**是否加速状态 */\r\n    public static IsAccelerated=false;\r\n\r\n    /**默认的用户 */\r\n    public static get_Defualt_PlayerInfo(): PlayerInfo {\r\n        var info = new PlayerInfo();\r\n        info.Name = \"匿名\";\r\n        info.Adress = \"北京\";\r\n        info.GenderType = GenderType.male;\r\n        info.ID = \"01\";\r\n        info.PlatformType = PlatformType.Web;\r\n        return info;\r\n    }\r\n\r\n    /**用户名字处理 */\r\n    public static UserNamePolice(name:string):string{\r\n        if (name.length <= 6) return name;\r\n        let _name= name[0]+name[1]+\"*\"+name[name.length-2]+name[name.length-1]\r\n        return _name;\r\n    }\r\n}\r\n\r\n","/**\r\n * 自定义事件 注册分发\r\n */\r\nexport class HoomEventCenter {\r\n    /**事件列表*/\r\n    private static eventList = {};\r\n    constructor() { }\r\n    /** \r\n     * 派发事件\r\n     * @param type 事件类型\r\n     * @param args 事件参数\r\n     */\r\n    public static emit(type: string, ...args: any[]): void {\r\n        let arr: Array<any> = this.eventList[type];\r\n        if (arr) {\r\n            arr.forEach(element => {\r\n                element[0].apply(element[1], args);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 监听事件\r\n     * @param type       事件类型\r\n     * @param listener   回调函数\r\n     * @param thisObject 回调执行对象\r\n     */\r\n    public static on(type: string, listener: Function, thisObject: any): void {\r\n        let arr: Array<any> = this.eventList[type];\r\n        if (!arr) {\r\n            arr = [];\r\n            this.eventList[type] = arr;\r\n        }\r\n        else {\r\n            arr.forEach(element => {\r\n                if (element[0] == listener && element[1] == thisObject) {\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n        arr.push([listener, thisObject]);\r\n    }\r\n\r\n    /**\r\n     * 移除事件\r\n     * @param type       事件类型\r\n     * @param listener   回调函数\r\n     * @param thisObject 回调执行对象\r\n     */\r\n    public static off(type: string, listener: Function, thisObject: any): void {\r\n        var arr: Array<any> = this.eventList[type];\r\n        if (arr) {\r\n            var len = arr.length;\r\n            for (var i = len - 1; i >= 0; i--) {\r\n                if (arr[i][0] == listener && arr[i][1] == thisObject) {\r\n                    arr.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n        if (arr && arr.length == 0) {\r\n            this.eventList[type] = null;\r\n            delete this.eventList[type];\r\n        }\r\n    }\r\n\r\n    public static offAll(){\r\n        this.eventList={};\r\n    }\r\n}\r\n\r\n","import { XHRCreater } from \"./Network/XHR\";\r\n\r\nexport class Http{\r\n    public static get(url:string):Promise<any>{\r\n        return XHRCreater.createInstance().getJSON_Async(url);\r\n    }\r\n    public static post(url:string,data:Object):Promise<any>{\r\n        return XHRCreater.createInstance().post_Async(url,data);\r\n    }\r\n}","\r\nexport class LocationStorage{\r\n    \r\n    public static get<T>(key:string):T{\r\n        return <T>new Object();\r\n    }\r\n\r\n    public static set(key:string,obj:object){\r\n\r\n    }\r\n\r\n\r\n\r\n   \r\n}\r\n\r\nexport class Web_LocalStorage{\r\n    public static get<T>(key:string):T{\r\n       let obj=  localStorage.getItem(key);\r\n       if(!obj) return null;\r\n       return <T>JSON.parse(obj);\r\n    }\r\n\r\n    public static set(key:string,obj:object){\r\n        localStorage.setItem(key,JSON.stringify(obj));\r\n    }\r\n}","import { GameConfig, EnvironmentType } from \"../Core/GameConfig\";\r\n\r\n\r\nexport class Logger {\r\n    public static info(...any) {\r\n        if (GameConfig.EnvironmentType != EnvironmentType.Produce) {\r\n            console.info(any);\r\n        }\r\n    }\r\n}","export enum EventType {\r\n    sys_ws_error = \"ws_error\",\r\n    sys_ws_message = \"ws_message\",\r\n    sys_ws_close = \"ws_close\",\r\n    sys_ws_send = \"ws_send\",\r\n    //设置缩放\r\n    zoom = \"onZoom\",\r\n    ballHighest = \"ballHighest\",\r\n    ballLowest = \"balllowest\",\r\n    createBallShadow = \"createBallShadow\",\r\n    recycleBallShadow = \"recycleBallShadow\",\r\n    recycleCollideShadow = \"recycleCollideShadow\",\r\n    createCollideShadow = \"createCollideShadow\",\r\n    ballColorChange = \"ballColorChange\",\r\n    ringColorChage = \"ringColorChage\",\r\n    playLeft = \"playLeft\",\r\n    playRight = \"playRight\",\r\n    gainScore = \"gainScore\",\r\n    jumpFail = \"jumpFail\"\r\n}\r\n","\r\nexport enum ColorType{\r\n     red=\"red\",\r\n     blue=\"blue\",\r\n     green=\"green\",\r\n     yellow=\"yellow\",\r\n     violet=\"violet\",\r\n     dyellow=\"dyellow\",\r\n}","export class NotificationCenter {\r\n    private eventTarget: cc.EventTarget = new cc.EventTarget();\r\n\r\n    private static instance: NotificationCenter = null;\r\n    public static get Instance(): NotificationCenter {\r\n        if (this.instance == null) {\r\n            this.instance = new NotificationCenter();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    /**\r\n     * Listen to a notification\r\n     * @param name \r\n     * @param callback \r\n     */\r\n    public on(name: string, callback: Function, target?: any) {\r\n        this.eventTarget.on(name, callback, target);\r\n    }\r\n\r\n    /**\r\n     * Dispatch a notification\r\n     * @param name \r\n     */\r\n    public emit(name: string, arg1?: any, arg2?: any, arg3?: any, arg4?: any, arg5?: any) {\r\n        this.eventTarget.emit(name, arg1, arg2, arg3, arg4, arg5);\r\n    }\r\n\r\n    /**\r\n     * Cancel listen\r\n     * @param name \r\n     */\r\n    public off(name: string, callback?: Function, target?: any) {\r\n        this.eventTarget.off(name, callback, target);\r\n    }\r\n}\r\n\r\n","import { GlobalStatic, PlayerInfo } from \"./GlobalStatic\";\r\nimport { GameConfig, PlatformType } from \"./GameConfig\";\r\nimport { Logger } from \"../Util/Logger\";\r\n\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n@ccclass\r\nexport default class PlatformAuthorize extends cc.Component {\r\n\r\n    private static userInfoKey=\"user_Info_Key\";\r\n\r\n    private wxBtnAuthorize: UserInfoButton;\r\n  \r\n    onLoad() {\r\n        this.getUserFromStorage();\r\n        if (GlobalStatic.UserInfo == null) {\r\n            this.initAuthorize(this.node)\r\n        } else {\r\n            this.node.destroy();\r\n        }\r\n    }\r\n\r\n    /**获取本地数据 */\r\n    private getUserFromStorage() {\r\n        let self=this;\r\n        if(GlobalStatic.UserInfo != null) return;\r\n        if (GameConfig.PlatformType == PlatformType.WX) {\r\n            wx.getStorage({\r\n                key: PlatformAuthorize.userInfoKey,\r\n                success (res) {\r\n                    GlobalStatic.UserInfo=  <PlayerInfo>res.data;\r\n                    self.wxBtnAuthorize.destroy();\r\n                    self.node.destroy();\r\n                }\r\n              })\r\n        }\r\n        if (GameConfig.PlatformType == PlatformType.TT) {\r\n            tt.getStorage({\r\n                key: PlatformAuthorize.userInfoKey,\r\n                success (res) {\r\n                  GlobalStatic.UserInfo=  <PlayerInfo>res.data;\r\n\r\n                  self.node.destroy();\r\n                },\r\n            });\r\n        }\r\n    }\r\n   \r\n    /**\r\n     * 存储用户数据\r\n     * @param userinfo \r\n     */\r\n    private setUserToStorage(userinfo:PlayerInfo){\r\n        if (GameConfig.PlatformType == PlatformType.WX) {\r\n            wx.setStorage({\r\n                key: PlatformAuthorize.userInfoKey,\r\n                data: userinfo,\r\n                success(res){\r\n                    //console.info(\"设置成功\"+JSON.stringify(res))\r\n                }\r\n              })\r\n        }\r\n        if (GameConfig.PlatformType == PlatformType.TT) {\r\n            tt.setStorage({\r\n                key: PlatformAuthorize.userInfoKey,\r\n                data: userinfo,\r\n                success(res){\r\n                   // console.info(\"设置成功\"+JSON.stringify(res))\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private initAuthorize(btnNode: cc.Node = null) {\r\n        this.web_get_palyerInfo();\r\n        if (GameConfig.PlatformType == PlatformType.WX) {\r\n            this.createAuthorizeBtn(this.node);\r\n        }\r\n        if (GameConfig.PlatformType == PlatformType.Web) {\r\n            this.node.destroy();\r\n        }\r\n        if (GameConfig.PlatformType == PlatformType.TT) {\r\n            this.createAuthorize_tt()\r\n            this.node.destroy();\r\n        }\r\n    }\r\n\r\n    private web_get_palyerInfo() {\r\n        GlobalStatic.UserInfo = GlobalStatic.get_Defualt_PlayerInfo();\r\n    }\r\n\r\n    /**真的很绕啊 */\r\n    private createAuthorize_tt() {\r\n        let self=this;\r\n        tt.login({\r\n            success(res) {\r\n                tt.getSetting({\r\n                    success(res) {\r\n                        tt.getUserInfo({\r\n                            withCredentials: true,\r\n                            success(res) {\r\n                                let userInfo = new PlayerInfo();\r\n                                userInfo.Name = GlobalStatic.UserNamePolice(res.userInfo.nickName);\r\n                                //userInfo.GenderType = Number.parseInt(res.userInfo.gender);\r\n                                userInfo.Adress = res.userInfo.city;\r\n                                userInfo.PlatformType = PlatformType.WX;\r\n                                userInfo.ID = \"tt没有\"\r\n                                GlobalStatic.UserInfo = userInfo;\r\n                                self.setUserToStorage(userInfo);\r\n                            },\r\n                            fail(res) {\r\n                                //console.log(`getUserInfo调用失败${res}`);\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n\r\n            },\r\n            fail(res) {\r\n                //console.log(`login调用失败`);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private createAuthorizeBtn(btnNode: cc.Node) {\r\n        let self=this;\r\n        let btnSize = cc.size(btnNode.width + 10, btnNode.height + 10);\r\n        let frameSize = cc.view.getFrameSize();\r\n        let winSize = cc.winSize;\r\n\r\n        //适配不同机型来创建微信授权按钮\r\n        let left = (winSize.width * 0.5 + btnNode.x - btnSize.width * 0.5) / winSize.width * frameSize.width;\r\n        let top = (winSize.height * 0.5 - btnNode.y - btnSize.height * 0.5) / winSize.height * frameSize.height;\r\n        let width = btnSize.width / winSize.width * frameSize.width;\r\n        let height = btnSize.height / winSize.height * frameSize.height;\r\n\r\n        this.wxBtnAuthorize = wx.createUserInfoButton({\r\n            type: 'text',\r\n            text: '',\r\n            style: {\r\n                left: left,\r\n                top: top,\r\n                width: width,\r\n                height: height,\r\n                lineHeight: 0,\r\n                backgroundColor: '',\r\n                color: '#ffffff',\r\n                textAlign: 'center',\r\n                fontSize: 16,\r\n                borderRadius: 4\r\n            }\r\n        })\r\n\r\n        this.wxBtnAuthorize.onTap((res) => {\r\n          \r\n            if (res.userInfo) {\r\n                Logger.info(\"用户信息\" + JSON.stringify(res.userInfo))\r\n                let userInfo = new PlayerInfo();\r\n                userInfo.Name = GlobalStatic.UserNamePolice(res.userInfo.nickName);\r\n                userInfo.GenderType = res.userInfo.gender;\r\n                userInfo.Adress = res.userInfo.city;\r\n                userInfo.PlatformType = PlatformType.WX;\r\n                userInfo.UserPhotoUrl=res.userInfo.avatarUrl;\r\n                userInfo.Province=res.userInfo.province;\r\n                userInfo.City=res.userInfo.city;\r\n                userInfo.ID = \"wx没有\"\r\n                GlobalStatic.UserInfo = userInfo;\r\n                self.setUserToStorage(userInfo);\r\n            }\r\n            this.wxBtnAuthorize.destroy();\r\n            this.node.destroy();\r\n        });\r\n    }\r\n}\r\n","import { GameConfig } from \"./GameConfig\";\r\nimport { GlobalStatic } from \"./GlobalStatic\";\r\nimport { Logger } from \"../Util/Logger\";\r\n\r\n\r\n\r\n/**或许信息可能是异步的：注意 */\r\nexport class PlatformPlayerInfo {\r\n\r\n    private static userInfoKey=\"user_Info_Key\";\r\n\r\n    /**获取本地数据 */\r\n    public static getUserFromStorage() {\r\n        switch (GameConfig.PlatformType) {\r\n            case PlatformType.WX:\r\n                wx.getStorage({\r\n                    key: this.userInfoKey,\r\n                    success(res) {\r\n                        GlobalStatic.UserInfo = <PlayerInfo>res.data;\r\n                        Logger.info(\"用户信息\" + JSON.stringify(res.data))\r\n                    }\r\n                })\r\n                break;\r\n            case PlatformType.TT:\r\n                tt.getStorage({\r\n                    key: this.userInfoKey,\r\n                    success(res) {\r\n                        GlobalStatic.UserInfo = <PlayerInfo>res.data;\r\n                        Logger.info(\"用户信息\" + JSON.stringify(res.data))\r\n                    },\r\n                });\r\n                break;\r\n            default:\r\n                GlobalStatic.UserInfo = GlobalStatic.get_Defualt_PlayerInfo();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 存储用户数据\r\n     * @param userinfo \r\n     */\r\n    public static setUserToStorage(userinfo: PlayerInfo) {\r\n        switch (GameConfig.PlatformType) {\r\n            case PlatformType.WX:\r\n                wx.setStorage({\r\n                    key: this.userInfoKey,\r\n                    data: userinfo,\r\n                    success(res) {\r\n                        Logger.info(\"设置成功\" + JSON.stringify(res))\r\n                    }\r\n                })\r\n                break;\r\n            case PlatformType.TT:\r\n                tt.setStorage({\r\n                    key: this.userInfoKey,\r\n                    data: userinfo,\r\n                    success(res) {\r\n                        Logger.info(\"设置成功\" + JSON.stringify(res))\r\n                    }\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n}","import { AudioType } from \"./AudioType\";\r\n\r\n\r\nexport class AudioResource {\r\n\r\n    private static audioPool: Array<number>=new Array<number>();\r\n    // private static bgmAudioPool: Array<number>=new Array<number>();\r\n    private static AudioMap: Map<string, cc.AudioClip>=new Map<string, cc.AudioClip>();\r\n\r\n    public static cacheAudioClip(clipArray: Array<cc.AudioClip>) {\r\n        for (let index = 0; index < clipArray.length; index++) {\r\n            const clip = clipArray[index];\r\n            this.AudioMap.set(clip.name, clip);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据类型播放\r\n     * @param audioType \r\n     */\r\n    public static playByAudioType(audioType: AudioType) {\r\n        let clip = this.AudioMap.get(audioType.toString());;\r\n        let id = cc.audioEngine.play(clip, false, 1);\r\n        this.audioPool.push(id);\r\n        cc.audioEngine.setFinishCallback(id, this.onRemoveAudio.bind(this, id));\r\n    }\r\n\r\n\r\n    public static playByNameKey(key: string) {\r\n        let clip = this.AudioMap.get(key);\r\n        let id = cc.audioEngine.play(clip, false, 1);\r\n        this.audioPool.push(id);\r\n        cc.audioEngine.setFinishCallback(id, this.onRemoveAudio.bind(this, id));\r\n    }\r\n\r\n    public static pause(audioId: number) {\r\n        cc.audioEngine.pause(audioId);\r\n    }\r\n\r\n    public static stop(audioId: number) {\r\n        cc.audioEngine.stop(audioId);\r\n    }\r\n\r\n    public static resume(audioId: number) {\r\n        cc.audioEngine.resume(audioId);\r\n    }\r\n\r\n    private static onRemoveAudio(id: number) {\r\n        var index = this.audioPool.indexOf(id);\r\n        if (index > -1) {\r\n            this.audioPool.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    // private static onRemoveBgmAudio(id: number) {\r\n    //     var index = this.bgmAudioPool.indexOf(id);\r\n    //     if (index > -1) {\r\n    //         this.bgmAudioPool.splice(index, 1);\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * 背景音乐\r\n     * @param audioType \r\n     */\r\n    public static playBgmByType(audioType: AudioType){\r\n        let clip = this.AudioMap.get(audioType.toString());;\r\n        let id = cc.audioEngine.playMusic(clip, true);\r\n        this.audioPool.push(id);\r\n        cc.audioEngine.setFinishCallback(id, this.onRemoveAudio.bind(this, id));\r\n    }\r\n\r\n    //   /**\r\n    //  * 切换\r\n    //  * @param audioType \r\n    //  */\r\n    // public static ChageBgmByType(audioType: AudioType){\r\n\r\n    // }\r\n\r\n//     /**\r\n//      * 切换，并播放背景音乐\r\n//      * @param audioType \r\n//      */\r\n//    public static playAndChageBgmByType(audioType: AudioType,target:any=null){\r\n//         let lastVolume=1;\r\n//         let lastId= this.bgmAudioPool[0]\r\n//         var scheduler = cc.director.getScheduler();\r\n//         function callback(){\r\n//             var lastBgmState = cc.audioEngine.getState(lastId);\r\n//             if (lastBgmState && lastVolume >= 0) {\r\n//                 lastVolume -= 0.05\r\n//                 cc.audioEngine.setVolume(lastId, lastVolume);\r\n//             }\r\n//         }\r\n//         scheduler.schedule(callback, this, 0.1, 20, 0, false);\r\n//    }\r\n}","import { CCAsync } from '../Util/CCAsync';\r\nimport { asyncWrap } from '../Util/TTAsync';\r\nexport class ConfigController {\r\n\r\n\r\n    public  static async loadConfig(){\r\n        let url=  cc.url.raw('resources/test.json');\r\n        let [err,asset] =await asyncWrap(CCAsync.load(url)) ;\r\n        //let areaList = <Area[]>asset.json;\r\n    }\r\n\r\n\r\n    private test() {\r\n        cc.loader.loadRes(\"fishconfig\", (err, jsonAsset) => {\r\n            //let areaList = <Area[]>jsonAsset.json;\r\n        });\r\n    }\r\n}","import { SpriteType } from './SpriteType';\r\nexport class SpriteRes{\r\n   \r\n    \r\n    private static SpriteFrameMap: Map<string, cc.SpriteFrame>=new Map<string, cc.SpriteFrame>();\r\n\r\n    public static cacheSpriteFrame(clipArray: Array<cc.SpriteFrame>) {\r\n        for (let index = 0; index < clipArray.length; index++) {\r\n            const clip = clipArray[index];\r\n            this.SpriteFrameMap.set(clip.name, clip);\r\n        }\r\n    }\r\n\r\n\r\n    public static getByNameKey(key: string):cc.SpriteFrame {\r\n        return this.SpriteFrameMap.get(key);\r\n    }\r\n\r\n\r\n    public static getByType(type: SpriteType):cc.SpriteFrame {\r\n        return this.SpriteFrameMap.get(type.toString());\r\n    }\r\n\r\n}","\r\nexport enum SpriteType{\r\n\r\n     state_busy=\"state_busy\",\r\n     state_defualt=\"state_deafualt\",\r\n     state_disabled=\"state_disabled\",\r\n\r\n    gender_female=\"gender_female\",\r\n    gender_Fame=\"gender_Fame\",\r\n  \r\n}","import { XHRCreater } from \"./Network/XHR\";\r\nimport { CommonResult } from './CommonResult';\r\n\r\ndeclare let tt:any;\r\n// declare let asyncWrap:asyncWrap;\r\n\r\n\r\nexport function asyncWrap<T, U = any>(promise: Promise<T>): Promise<[U | null, T | null]> {\r\n    return promise\r\n        .then<[null, T]>((data: T) => [null, data])\r\n        .catch<[U, null]>(err => [err, null])\r\n}\r\n\r\nexport async function get<T>(url:string):Promise<CommonResult<T>>{\r\n     var str=await XHRCreater.createInstance().getJSON_Async(url);\r\n     var json=<CommonResult<T>>JSON.parse(str)\r\n     return json\r\n}\r\n\r\nexport async function post<T>(url:string,data:object):Promise<CommonResult<T>>{\r\n    var str=await XHRCreater.createInstance().post_Async(url,data);\r\n    var json=<CommonResult<T>>JSON.parse(str)\r\n    return json\r\n}\r\n\r\n/**\r\n * 对 tt 中 api 异步的封装\r\n */\r\nexport class TTAsync{\r\n\r\n    public static loginAsync():Promise<any>{\r\n        return new Promise<any>((resolve,reject)=>{\r\n            tt.login({\r\n                success(res) {\r\n                    resolve(res);\r\n                },\r\n            });\r\n        });\r\n    }\r\n   \r\n    public static getgetSettingAsync():Promise<any>{\r\n        return new Promise<any>((resolve,reject)=>{\r\n            tt.getSetting({\r\n                success(res) {\r\n                    resolve(res);\r\n                },\r\n            })\r\n        });\r\n    }\r\n\r\n    public static getUserInfoAsync():Promise<any>{\r\n        return new Promise<any>((resolve,reject)=>{\r\n            tt.getUserInfo({\r\n                withCredentials: true,\r\n                success(res) {\r\n                    resolve(res);\r\n                },\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n    public static getSession(clientInfo:any):Promise<any>{\r\n        return new Promise<any>((resolve,reject)=>{\r\n            var url='https://developer.toutiao.com/api/apps/jscode2session?appid='+clientInfo.appid+'&secret='+clientInfo.secret+'&js_code='+clientInfo.code+'&grant_type=authorization_code';  \r\n            tt.request({  \r\n                url: url,  \r\n                data: {},  \r\n                method: 'GET', \r\n                success: function(res){ \r\n                    resolve(res);\r\n                }  \r\n            });\r\n        });\r\n    }\r\n\r\n}","\r\n/**\r\n * tt websocket \r\n */\r\nexport class TT_WebSocket {\r\n\r\n    private static socketOpen: boolean = false;\r\n    private static socketCount:number=0;\r\n\r\n    private static socketMsgQueue = [];\r\n\r\n    private static ttSocketTask;\r\n\r\n    public static open(url: string) {\r\n        if(TT_WebSocket.socketCount>0) return;\r\n        TT_WebSocket.socketCount++;\r\n        \r\n        this.ttSocketTask= tt.connectSocket({\r\n            url: url,\r\n            // header: {\r\n            //     'content-type': 'arraybuffer'\r\n            //   },\r\n            //protocols: ['protocol1'],\r\n        });\r\n\r\n        this.ttSocketTask.onOpen(res=> {\r\n            TT_WebSocket.socketOpen = true;\r\n            for (let i = 0; i < TT_WebSocket.socketMsgQueue.length; i++) {\r\n                TT_WebSocket.send(TT_WebSocket.socketMsgQueue[i]);\r\n            }\r\n            TT_WebSocket.socketMsgQueue = [];\r\n        });\r\n\r\n        this.ttSocketTask.onClose(res=> {\r\n            if(TT_WebSocket.onClose){\r\n                TT_WebSocket.onClose(res);\r\n                TT_WebSocket.clear();\r\n            }\r\n        });\r\n\r\n        this.ttSocketTask.onError(error=> {\r\n          \r\n            if(TT_WebSocket.onError){\r\n                TT_WebSocket.onError(error);\r\n                TT_WebSocket.clear();\r\n            }\r\n        });\r\n\r\n        this.ttSocketTask.onMessage(res=>{\r\n            if(TT_WebSocket.onMessage){\r\n                TT_WebSocket.onMessage(res.data);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public static send(msg: string | ArrayBuffer) {\r\n      \r\n        if (TT_WebSocket.socketOpen) {\r\n            this.ttSocketTask.send({\r\n                data: msg\r\n            })\r\n        } else {\r\n            TT_WebSocket.socketMsgQueue.push(msg)\r\n        }\r\n\r\n    }\r\n\r\n    public static close() {\r\n        if(TT_WebSocket.socketOpen){\r\n            TT_WebSocket.clear();\r\n            this.ttSocketTask.close(null);\r\n        }\r\n    }\r\n    private static clear(){\r\n        TT_WebSocket.socketOpen = false;\r\n        TT_WebSocket.onClose=null;\r\n        TT_WebSocket.onMessage=null;\r\n        TT_WebSocket.onError=null;\r\n        TT_WebSocket.socketMsgQueue=[];\r\n        TT_WebSocket.socketCount=0;\r\n    }\r\n\r\n    public static onMessage: (data: string | ArrayBuffer) => void;\r\n\r\n    public static onClose: (error?: Error) => void;\r\n\r\n    public static onError:(error?: Error) => void;\r\n\r\n    public static onOpen:() => void;\r\n}","\r\nexport class TT_XHR {\r\n\r\n    /**\r\n     * wx get json\r\n     * @param url \r\n     * @param success \r\n     * @param fail \r\n     */\r\n    public static getJSON(url: string, success: Function, fail: Function) {\r\n        tt.request({\r\n            url: url,\r\n            method: \"GET\",\r\n            responseType: \"text\",\r\n            success: function (res) {\r\n                if (success) success(res.data);\r\n            },\r\n            fail: function (res) {\r\n                //console.error('wx get json fail');\r\n                if (fail) fail(res);\r\n            },\r\n        })\r\n    }\r\n\r\n    public static post(url: string,data:object, success: Function, fail: Function) {\r\n        tt.request({\r\n            url: url,\r\n            method: \"Post\",\r\n            responseType: \"text\",\r\n            data:data,\r\n            success: function (res) {\r\n                if (success) success(res.data);\r\n            },\r\n            fail: function (res) {\r\n                //console.error('wx get json fail');\r\n                if (fail) fail(res);\r\n            },\r\n        })\r\n    }\r\n\r\n    public static post_Async(url:string,data:object):Promise<string>{\r\n        return new Promise<string>((resolve,reject)=>{\r\n            tt.request({\r\n                url: url,\r\n                method: \"Post\",\r\n                responseType: \"text\",\r\n                data:data,\r\n                success: function (res) {\r\n                    if (resolve) resolve(res.data);\r\n                },\r\n                fail: function (res) {\r\n                    //console.error('wx get json fail');\r\n                    if (reject) reject(res);\r\n                },\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * wx get json 使用 Promise\r\n     * @param url \r\n     */\r\n    public static getJSON_Async(url: string): Promise<string> {\r\n        return new Promise<string>((resolve, reject) => {\r\n            tt.request({\r\n                url: url,\r\n                method: \"GET\",\r\n                responseType: \"text\",\r\n                success: function (res) {\r\n                    resolve(res.data.toString());\r\n                },\r\n                fail: function (res) {\r\n                    //console.error('wx get json fail');\r\n                    reject(res);\r\n                },\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n}","import BallShadow from \"./View.BallShadow\";\r\nimport { HoomEventCenter } from \"./HoomEventCenter\";\r\nimport { EventType } from \"./Model.RoomEvent\";\r\nimport { ColorType } from \"./Model.ShadowType\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BallShadowManager extends cc.Component {\r\n\r\n    private shadowNode: cc.Node;\r\n    private shadowNodePool: cc.NodePool=new cc.NodePool(BallShadow);\r\n\r\n    onLoad () {\r\n        HoomEventCenter.on(EventType.createBallShadow, this.onCreateShadow, this);\r\n        HoomEventCenter.on(EventType.recycleBallShadow, this.onRecycleShadow, this);\r\n\r\n        this.shadowNode= this.node.find(\"shadow\");\r\n        this.shadowNodePool=new cc.NodePool(BallShadow);\r\n    }\r\n   \r\n    private onRecycleShadow(node: cc.Node) {\r\n        this.shadowNodePool.put(node);\r\n    }\r\n\r\n    private onCreateShadow(position:cc.Vec2,colorType:ColorType){\r\n        let node:cc.Node;\r\n        if(this.shadowNodePool.size()>0) {\r\n            node=this.shadowNodePool.get(BallShadow);\r\n        }else{\r\n           node= cc.instantiate(this.shadowNode);\r\n        }\r\n        node.getComponent(BallShadow).init(position,colorType);\r\n        node.active=true;\r\n        node.setParent(this.node);\r\n    }\r\n \r\n   \r\n}\r\n","import { ColorType } from \"./Model.ShadowType\";\r\nimport { HoomEventCenter } from \"./HoomEventCenter\";\r\nimport { EventType } from \"./Model.RoomEvent\";\r\nimport DataSprite from \"./Data.Sprite\";\r\n\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BallShadow extends cc.Component {\r\n    public init(position:cc.Vec2,color: ColorType) {\r\n       \r\n        this.node.getComponent(cc.Sprite).spriteFrame=DataSprite.getSpriteFrame(color);\r\n        \r\n        this.node.setPosition(position);\r\n        this.node.scale=0.3+(Math.random())*0.4;\r\n        this.node.opacity=50+ (Math.random())*200;\r\n\r\n        let x= (Math.random()-0.5)*50;\r\n        let y=20+ (Math.random())*50;\r\n        let v2=cc.v2(x,y);\r\n\r\n        let duration=0.75+ (Math.random())*0.25;\r\n        \r\n        cc.tween(this.node)\r\n        .by(duration, { scale: 0.1, position: v2 })\r\n        .start();\r\n\r\n        cc.tween(this.node)\r\n        .to(duration+0.1, { opacity:0 }).call((dt)=>this.destroyShadow())\r\n        .start();\r\n        \r\n    }\r\n\r\n    private destroyShadow() {\r\n        HoomEventCenter.emit(EventType.recycleBallShadow, this.node);\r\n    }\r\n\r\n    //重新使用时\r\n    reuse(data: any) {\r\n        // this.node.scale=0.3+(Math.random())*0.4;\r\n        // this.node.opacity=150;\r\n    }\r\n    //回收时\r\n    unuse(data: any) {\r\n\r\n    }\r\n   \r\n}\r\n","import { HoomEventCenter } from \"./HoomEventCenter\";\r\nimport { EventType } from \"./Model.RoomEvent\";\r\nimport { ColorType } from './Model.ShadowType';\r\nimport { ColorPolicy } from \"./ChangeColorPolicy\";\r\nimport DataSprite from \"./Data.Sprite\";\r\nimport { AudioResource } from \"../Core/Resource.Audio\";\r\nimport { AudioType } from \"../Core/AudioType\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BallView extends cc.Component {\r\n\r\n    // 主角跳跃高度\r\n    private jumpHeight: number = 320;\r\n    // 主角跳跃持续时间\r\n    private jumpDuration: number = 0.75;\r\n    private currentColor:ColorType=ColorType.violet;\r\n    private ballBgNode:cc.Node;\r\n    onLoad() {\r\n        this.node.runAction(this.setJumpAction());\r\n        this.ballBgNode=this.node.find(\"background\");\r\n    }\r\n\r\n    private setJumpAction() {\r\n        var jumpUpFinished = cc.callFunc(this.onHighest, this);\r\n        var jumpUp = cc.sequence(cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut()),jumpUpFinished);\r\n        // 下落\r\n        var jumpDownFinished = cc.callFunc(this.onLowest, this);\r\n        var jumpDown =cc.sequence( cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn()),jumpDownFinished);\r\n        // 不断重复\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\r\n    }\r\n\r\n\r\n    private onHighest() {\r\n        HoomEventCenter.emit(EventType.ballHighest,this.currentColor);\r\n\r\n      \r\n         //Logger.info(\"onHighest\")\r\n    }\r\n\r\n    private onLowest() {\r\n        AudioResource.playByAudioType(AudioType.jump);\r\n        HoomEventCenter.emit(EventType.ballLowest,this.currentColor);\r\n        //change color\r\n        this.currentColor=ColorPolicy.getColorType();\r\n\r\n        HoomEventCenter.emit(EventType.ballColorChange, this.currentColor);\r\n        this.ballBgNode.getComponent(cc.Sprite).spriteFrame=DataSprite.getSpriteFrame(this.currentColor);\r\n    }\r\n  \r\n    //产生阴影\r\n    private intervalTime=0;\r\n    update(dt){\r\n        this.intervalTime+=dt;\r\n        if(this.intervalTime<0.04) return;\r\n        this.intervalTime=0;\r\n        HoomEventCenter.emit(EventType.createBallShadow,this.node.position,this.currentColor);\r\n    }\r\n\r\n\r\n}\r\n","import { Logger } from '../Util/Logger';\r\nimport { AudioResource } from '../Core/Resource.Audio';\r\nimport { AudioType } from '../Core/AudioType';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ButtonView extends cc.Component {\r\n    onLoad() {\r\n        cc.tween(this.node)\r\n            .repeatForever(\r\n                cc.tween().to(1, { scale: 1.2 })\r\n                    .to(1, { scale: 1 })\r\n            ).start()\r\n\r\n        this.node.on(\"click\", () => {\r\n            AudioResource.playByAudioType(AudioType.btn)\r\n        },this)\r\n    }\r\n\r\n}\r\n","import CollideShadow from \"./View.CollideShadow\";\r\nimport { HoomEventCenter } from \"./HoomEventCenter\";\r\nimport { EventType } from \"./Model.RoomEvent\";\r\nimport { ColorType } from \"./Model.ShadowType\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CollideShadowManager extends cc.Component {\r\n\r\n\r\n    private shadowNode: cc.Node;\r\n    private shadowNodePool: cc.NodePool=new cc.NodePool(CollideShadow);\r\n\r\n    onLoad () {\r\n        HoomEventCenter.on(EventType.ballLowest, this.onCreateShadow, this);\r\n        // HoomEventCenter.on(EventType.createCollideShadow, this.onCreateShadow, this);\r\n        HoomEventCenter.on(EventType.recycleCollideShadow, this.onRecycleShadow, this);\r\n\r\n        this.shadowNode= this.node.find(\"shadow\");\r\n        this.shadowNodePool=new cc.NodePool(CollideShadow);\r\n    }\r\n   \r\n    private onRecycleShadow(node: cc.Node) {\r\n        this.shadowNodePool.put(node);\r\n    }\r\n\r\n    private onCreateShadow(colorType:ColorType){\r\n        for(let i=0;i<30;i++){\r\n            let node:cc.Node;\r\n            if(this.shadowNodePool.size()>0) {\r\n                node=this.shadowNodePool.get(CollideShadow);\r\n            }else{\r\n               node= cc.instantiate(this.shadowNode);\r\n            }\r\n            node.getComponent(CollideShadow).init(colorType);\r\n            node.active=true;\r\n           \r\n            node.setParent(this.node);\r\n        }\r\n    }\r\n}\r\n","import { ColorType } from \"./Model.ShadowType\";\r\nimport { HoomEventCenter } from \"./HoomEventCenter\";\r\nimport { EventType } from \"./Model.RoomEvent\";\r\nimport DataSprite from \"./Data.Sprite\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class CollideShadow extends cc.Component {\r\n\r\n\r\n  public init(colorType: ColorType) {\r\n\r\n    this.node.getComponent(cc.Sprite).spriteFrame=DataSprite.getSpriteFrame(colorType);\r\n    \r\n    this.node.setPosition(cc.v2(0,0));\r\n    this.node.scale = 0.6 + (Math.random()) * 0.4;\r\n    this.node.opacity = 100 + (Math.random()) * 150;\r\n\r\n    let x = (Math.random() - 0.5) * 250;\r\n    let y = (Math.random() - 0.5) * 250;\r\n    let v2 = cc.v2(x, y);\r\n\r\n    let duration = 0.75;\r\n\r\n    cc.tween(this.node)\r\n      .by(duration, { scale: 0.1, position: v2 })\r\n      .start();\r\n\r\n    cc.tween(this.node)\r\n      .to(duration + 0.1, { opacity: 0 }).call((dt) => this.destroyShadow())\r\n      .start();\r\n\r\n  }\r\n\r\n  private destroyShadow() {\r\n    HoomEventCenter.emit(EventType.recycleCollideShadow, this.node);\r\n  }\r\n\r\n  //重新使用时\r\n  reuse(data: any) {\r\n    // this.node.scale=0.3+(Math.random())*0.4;\r\n    // this.node.opacity=150;\r\n  }\r\n  //回收时\r\n  unuse(data: any) {\r\n\r\n  }\r\n}\r\n","import { RingPolicy } from \"../2.Home/ChangeColorPolicy\";\r\nimport { HoomEventCenter } from \"../2.Home/HoomEventCenter\";\r\nimport { RoomController } from \"../3.Room/Controller.Room\";\r\nimport { AudioResource } from \"../Core/Resource.Audio\";\r\nimport { AudioType } from \"../Core/AudioType\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class DataView extends cc.Component {\r\n\r\n    private homeButton:cc.Node;\r\n    private restartButton:cc.Node;\r\n    private shareButton:cc.Node;\r\n\r\n    private scoreLabel:cc.Label;\r\n    private bestScoreLabel:cc.Label;\r\n\r\n\r\n    onLoad () {\r\n        this.homeButton=this.node.find(\"buttom/homeButton\");\r\n        this.homeButton.on(\"click\",this.onGoHome,this);\r\n        this.restartButton=this.node.find(\"buttom/restartButton\");\r\n        this.restartButton.on(\"click\",this.onRestrart,this);\r\n\r\n        this.shareButton=this.node.find(\"buttom/shareButton\");\r\n        this.scoreLabel= this.node.find(\"Content/score/label\").getComponent(cc.Label);\r\n        this.bestScoreLabel=this.node.find(\"Content/bestscore/label\").getComponent(cc.Label);\r\n        this.startAnim();\r\n        \r\n        //set socre\r\n        this.scoreLabel.string=RoomController.score.toString();\r\n        this.bestScoreLabel.string=RoomController.bestScore.toString();\r\n    }\r\n\r\n    private onGoHome(){\r\n      \r\n        this.endAnim();\r\n        this.scheduleOnce(() => {\r\n            RingPolicy.setDeafult();\r\n            HoomEventCenter.offAll();\r\n            cc.director.loadScene(\"2.Home\");\r\n        }, 0.51);\r\n    }  \r\n \r\n    private onRestrart(){\r\n        this.endAnim()\r\n        this.scheduleOnce(() => {\r\n            RingPolicy.setDeafult();\r\n            HoomEventCenter.offAll();\r\n            cc.director.loadScene(\"3.Room\");\r\n        }, 0.51);\r\n    }  \r\n   \r\n    private startAnim() {\r\n\r\n        let btnList=new Array<cc.Node>();\r\n        btnList.push(this.homeButton)\r\n        btnList.push(this.shareButton)\r\n        btnList.push(this.restartButton);\r\n\r\n        for (let item of btnList) {\r\n            let position = item.getPosition();\r\n             item.setPosition(position.mul(10));\r\n            cc.tween(item).to(0.5, { position: position }, { easing: \"circInOut\" }).start();\r\n        }\r\n\r\n    }\r\n\r\n    private endAnim() {\r\n        let btnList=new Array<cc.Node>();\r\n        btnList.push(this.homeButton)\r\n        btnList.push(this.shareButton)\r\n        btnList.push(this.restartButton);\r\n        for (let item of btnList) {\r\n            let position = item.getPosition().mulSelf(10);\r\n            cc.tween(item).to(0.5, { position: position }, { easing: \"circInOut\" }).start();\r\n        }\r\n\r\n    }\r\n  \r\n}\r\n","import { HoomEventCenter } from \"./HoomEventCenter\";\r\nimport { EventType } from \"./Model.RoomEvent\";\r\nimport { ColorType } from './Model.ShadowType';\r\nimport { RingPolicy } from \"./ChangeColorPolicy\";\r\nimport { Logger } from '../Util/Logger';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HomeRingView extends cc.Component {\r\n\r\n    private currentColorType:ColorType=ColorType.violet;\r\n\r\n    onLoad() {\r\n        HoomEventCenter.on(EventType.ballHighest, this.onColorChange, this);\r\n        HoomEventCenter.on(EventType.ballLowest, this.onScaleRing, this);\r\n        //HoomEventCenter.on(EventType.ballHighest, this.onScaleRing, this);\r\n    }\r\n\r\n    private onColorChange(nextColorType: ColorType) {\r\n         let angle= RingPolicy.getAngle(nextColorType);\r\n         this.currentColorType=nextColorType;\r\n         cc.tween(this.node).by(0.2, {angle: angle},{easing: \"easeOutBounce\"})// \r\n         .delay(0.175)\r\n         .start();\r\n    }\r\n\r\n    private onScaleRing() {\r\n        cc.tween(this.node)\r\n            .to(0.075, { scale: 1.2 },{easing: \"circInOut\"})\r\n            .to(0.075, { scale: 1 },{easing: \"circInOut\"})//circInOut \r\n            .start();\r\n    }\r\n\r\n}\r\n","import { HoomEventCenter } from \"./HoomEventCenter\";\r\nimport { EventType } from \"./Model.RoomEvent\";\r\nimport { RingPolicy } from \"./ChangeColorPolicy\";\r\nimport { ColorType } from './Model.ShadowType';\r\nimport { Logger } from '../Util/Logger';\r\nimport { AudioResource } from \"../Core/Resource.Audio\";\r\nimport { AudioType } from \"../Core/AudioType\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class HomeView extends cc.Component {\r\n\r\n   private playBtn: cc.Node;\r\n   private sideNode: cc.Node;\r\n   private ringNode: cc.Node;\r\n   onLoad() {\r\n      this.sideNode = this.node.find(\"content/side\");\r\n      this.ringNode = this.node.find(\"content/ring\");\r\n      this.playBtn = this.node.find(\"buttom/playButton\");\r\n      this.playBtn.on(\"click\", this.onPlay, this);\r\n      this.loadResource();\r\n\r\n   }\r\n   private onPlay() {\r\n      AudioResource.playByAudioType(AudioType.btn);\r\n      cc.director.preloadScene(\"3.Room\");\r\n      this.sideNode.active = true;\r\n      this.ringNode.active = false;\r\n\r\n      //动画\r\n      for (let item of this.sideNode.children) {\r\n         let newPosition = item.position.mulSelf(5);\r\n         cc.tween(item).to(0.5, { position: newPosition }, { easing: \"circInOut\" }).start();\r\n      }\r\n      //btn\r\n      cc.tween(this.playBtn).by(0.5, { position: cc.v2(0, -400) }, { easing: \"circInOut\" }).start();\r\n\r\n      this.scheduleOnce((dt) => {\r\n         RingPolicy.setDeafult();\r\n         HoomEventCenter.offAll();\r\n         cc.director.loadScene(\"3.Room\");\r\n      }, 0.55);\r\n      //\r\n   }\r\n\r\n\r\n\r\n   /**加载音频 */\r\n   private loadResource() {\r\n      cc.loader.loadResDir(\"/audio\", cc.AudioClip, this.audioProgress.bind(this), this.audioComplete.bind(this));\r\n   }\r\n\r\n   private audioComplete(err, textures) {\r\n      Logger.info(textures.name);\r\n      AudioResource.cacheAudioClip(textures);\r\n   }\r\n\r\n   private audioProgress(completeCount: number, totalCount: number, res) {\r\n      Logger.info(\"completeCount:\" + completeCount, \"totalCount:\" + totalCount);\r\n   }\r\n\r\n}\r\n","\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class IndexView extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    label: cc.Label = null;\r\n\r\n    @property\r\n    text: string = 'hello';\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {}\r\n\r\n    start () {\r\n\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n","\r\nimport { Logger } from '../Util/Logger';\r\nimport { ColorType } from '../2.Home/Model.ShadowType';\r\nimport { HoomEventCenter } from '../2.Home/HoomEventCenter';\r\nimport { EventType } from '../2.Home/Model.RoomEvent';\r\nimport { RingPolicy } from '../2.Home/ChangeColorPolicy';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RoomRingView extends cc.Component {\r\n\r\n    private targetAngle:number=0;\r\n    private curentAngle:number=0;\r\n    private angleSpeel:number=0;\r\n    private secondSpeel:number=0.125;\r\n    private ringColorType: ColorType = ColorType.violet;\r\n    private ballColorType: ColorType=ColorType.violet;\r\n  \r\n    onLoad() {\r\n\r\n        this.targetAngle= this.node.angle;\r\n        this.curentAngle=this.node.angle;\r\n      \r\n        HoomEventCenter.on(EventType.ballLowest, this.onBallLowest, this);\r\n        //HoomEventCenter.on(EventType.ballLowest, this.onScaleRing, this);\r\n\r\n        HoomEventCenter.on(EventType.playLeft, this.onPlayLeft, this);\r\n        HoomEventCenter.on(EventType.playRight, this.onPlayRight, this);\r\n        HoomEventCenter.on(EventType.ballLowest, this.onScaleRing, this);\r\n    }\r\n\r\n    private onPlayLeft(nextColorType: ColorType) {\r\n        this.targetAngle+=60;\r\n        let _angle=this.targetAngle-this.curentAngle;\r\n        this.angleSpeel=_angle/this.secondSpeel;\r\n\r\n        let index= RingPolicy.defaultColorList.indexOf(this.ringColorType);\r\n        if(index==RingPolicy.defaultColorList.length-1) {\r\n              //最后一位\r\n            this.ringColorType=RingPolicy.defaultColorList[0]\r\n        }else{\r\n            this.ringColorType=RingPolicy.defaultColorList[index+1];\r\n        }\r\n      \r\n    }\r\n\r\n    private onPlayRight(colorType: ColorType) {\r\n        this.targetAngle-=60;\r\n        let _angle=this.targetAngle-this.curentAngle;\r\n        this.angleSpeel=_angle/this.secondSpeel;\r\n\r\n        let index= RingPolicy.defaultColorList.indexOf(this.ringColorType);\r\n        if(index==0) {\r\n          \r\n            this.ringColorType=RingPolicy.defaultColorList[RingPolicy.defaultColorList.length-1]\r\n        }else{\r\n            this.ringColorType=RingPolicy.defaultColorList[index-1];\r\n        }\r\n      \r\n    }\r\n\r\n\r\n    private onBallLowest(colorType: ColorType) {\r\n        this.ballColorType = colorType;\r\n        // Logger.info(\"ring:\"+this.ringColorType)\r\n        // Logger.info(\"ball:\"+ this.ballColorType)\r\n        if(this.ballColorType==this.ringColorType){\r\n            HoomEventCenter.emit(EventType.gainScore, 1);\r\n        }else{\r\n            HoomEventCenter.emit(EventType.jumpFail);\r\n        }\r\n    }\r\n\r\n    private onScaleRing() {\r\n        cc.tween(this.node)\r\n            // .by(0.075, { scale: 0.2 }, { easing: \"circInOut\" })\r\n            // .by(0.075, { scale: -0.2 }, { easing: \"circInOut\" })//circInOut \r\n            .by(0.075, { scale: 0.1 }, { easing: \"circInOut\" })\r\n            .by(0.075, { scale: -0.1 }, { easing: \"circInOut\" })\r\n            .delay(0.1)\r\n            .start();\r\n    }\r\n   \r\n \r\n    update(dt){\r\n\r\n       if(this.angleSpeel==0) return;\r\n\r\n       let differAngle=this.targetAngle-this.curentAngle;\r\n       let _angle=this.angleSpeel*dt;\r\n\r\n       if(Math.abs(differAngle)<Math.abs(_angle)) {\r\n           this.angleSpeel=0;\r\n           this.node.angle+=differAngle;  \r\n           this.curentAngle=this.node.angle;\r\n           return;\r\n        }\r\n        this.node.angle+=_angle;\r\n        this.curentAngle=this.node.angle;\r\n    }\r\n}\r\n","import { HoomEventCenter } from \"../2.Home/HoomEventCenter\";\r\nimport { EventType } from \"../2.Home/Model.RoomEvent\";\r\nimport { Logger } from '../Util/Logger';\r\nimport { RingPolicy } from \"../2.Home/ChangeColorPolicy\";\r\nimport { RoomController } from \"./Controller.Room\";\r\nimport { AudioResource } from \"../Core/Resource.Audio\";\r\nimport { AudioType } from \"../Core/AudioType\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class RoomView extends cc.Component {\r\n\r\n\r\n    private sideNode: cc.Node;\r\n    private ringNode: cc.Node;\r\n    private leftBtn: cc.Node;\r\n    private rightBtn: cc.Node;\r\n    private scoreLable: cc.Label;\r\n    private currentSocore: number = 0;\r\n\r\n    onLoad() {\r\n\r\n        HoomEventCenter.on(EventType.gainScore, this.onGainScore, this);\r\n        HoomEventCenter.on(EventType.jumpFail, this.onJumpFail, this);\r\n\r\n        this.sideNode = this.node.find(\"content/side\");\r\n        this.ringNode = this.node.find(\"content/ring\");\r\n        this.leftBtn = this.node.find(\"/bottom/leftBtn\");\r\n        this.rightBtn = this.node.find(\"/bottom/rightBtn\");\r\n        this.scoreLable = this.node.find(\"/content/score/label\").getComponent(cc.Label);\r\n\r\n\r\n        this.leftBtn.on(\"click\", this.onPlayLeft, this);\r\n        this.rightBtn.on(\"click\", this.onPlayRight, this);\r\n\r\n        this.startAnim();\r\n    }\r\n\r\n    private onPlayLeft() {\r\n        HoomEventCenter.emit(EventType.playLeft);\r\n    }\r\n\r\n    private onPlayRight() {\r\n        HoomEventCenter.emit(EventType.playRight);\r\n    }\r\n\r\n    private onGainScore(scroe: number = 1) {\r\n        this.currentSocore += scroe;\r\n        this.scoreLable.string = this.currentSocore.toString();\r\n    }\r\n\r\n    private onJumpFail() {\r\n        Logger.info(\"onJumpFail\");\r\n        AudioResource.playByAudioType(AudioType.fail);\r\n        this.endAnim();\r\n    }\r\n\r\n    private startAnim() {\r\n\r\n        this.sideNode.active = true;\r\n        this.ringNode.active = false;\r\n        //动画\r\n        for (let item of this.sideNode.children) {\r\n            let oldPosition = item.position;\r\n            let newPosition = oldPosition.mul(5);\r\n            item.position = newPosition;\r\n            cc.tween(item).to(0.5, { position: oldPosition }, { easing: \"circInOut\" }).start();\r\n        }\r\n        //btn\r\n        let leftPosition = this.leftBtn.getPosition();\r\n        this.leftBtn.setPosition(leftPosition.mul(5));\r\n        cc.tween(this.leftBtn).to(0.5, { position: leftPosition }, { easing: \"circInOut\" }).start();\r\n\r\n        let rightPosition = this.rightBtn.getPosition();\r\n        this.rightBtn.setPosition(rightPosition.mul(5))\r\n        cc.tween(this.rightBtn).to(0.5, { position: rightPosition }, { easing: \"circInOut\" }).start();\r\n\r\n        this.scheduleOnce(() => {\r\n            this.sideNode.active = false;\r\n            this.ringNode.active = true;\r\n        }, 0.51);\r\n\r\n    }\r\n\r\n    private endAnim() {\r\n        this.ringNode.active = false;\r\n        this.sideNode.active = true;\r\n        //动画\r\n        for (let item of this.sideNode.children) {\r\n            let position = item.position.mulSelf(5);\r\n            cc.tween(item).to(0.5, { position: position }, { easing: \"circInOut\" }).start();\r\n        }\r\n        //btn\r\n        let leftPosition = this.leftBtn.getPosition().mulSelf(5);\r\n        cc.tween(this.leftBtn).to(0.5, { position: leftPosition }, { easing: \"circInOut\" }).start();\r\n\r\n        let rightPosition = this.rightBtn.getPosition().mulSelf(5);;\r\n        cc.tween(this.rightBtn).to(0.5, { position: rightPosition }, { easing: \"circInOut\" }).start();\r\n\r\n        this.scheduleOnce(() => {\r\n            RingPolicy.setDeafult();\r\n            HoomEventCenter.offAll();\r\n            RoomController.score=this.currentSocore;\r\n            cc.director.loadScene(\"4.Data\");\r\n        }, 0.51);\r\n\r\n\r\n    }\r\n\r\n}\r\n","import { WX_WebSocket } from \"./WebSocket/WX_WebSocket\";\r\nimport { Web_WebSocket } from \"./WebSocket/Web_WebSocket\";\r\n\r\nimport { TT_WebSocket } from \"./WebSocket/TT_WebSocket\";\r\nimport { GameConfig, PlatformType } from \"../../Core/GameConfig\";\r\n\r\n\r\n/**\r\n * ws websocket\r\n */\r\nexport interface IWS {\r\n\r\n    open(url: string);\r\n    send(msg: string | ArrayBuffer);\r\n    close();\r\n\r\n    onOpen();\r\n    onMessage(data: string | ArrayBuffer);\r\n    onClose(error?: any);\r\n    onError(error?: any);\r\n\r\n}\r\n\r\n\r\nexport class WSCreater {\r\n    public static createInstance(): IWS {\r\n        switch (GameConfig.PlatformType) {\r\n            case PlatformType.Web:\r\n                return Web_WebSocket;\r\n            case PlatformType.WX:\r\n                return WX_WebSocket;\r\n            case PlatformType.TT:\r\n                return TT_WebSocket;\r\n            default:\r\n                return Web_WebSocket;\r\n        }\r\n    }\r\n}","\r\n/**\r\n * wx websocket \r\n */\r\nexport class WX_WebSocket {\r\n\r\n    private static socketOpen: boolean = false;\r\n    private static socketCount:number=0;\r\n\r\n    private static socketMsgQueue = [];\r\n\r\n    public static open(url: string) {\r\n        if(this.socketCount>0) return;\r\n        this.socketCount++;\r\n      \r\n        wx.connectSocket({\r\n            url: url,\r\n            tcpNoDelay:true,\r\n            //protocols: ['protocol1'],\r\n        });\r\n\r\n        wx.onSocketOpen(function (res) {\r\n            WX_WebSocket.socketOpen = true;\r\n            for (let i = 0; i < WX_WebSocket.socketMsgQueue.length; i++) {\r\n                WX_WebSocket.send(WX_WebSocket.socketMsgQueue[i]);\r\n            }\r\n            WX_WebSocket.socketMsgQueue = [];\r\n            WX_WebSocket.onOpen();\r\n        });\r\n\r\n        wx.onSocketClose(function (res) {\r\n            if(WX_WebSocket.onClose){\r\n                WX_WebSocket.onClose(res);\r\n                WX_WebSocket.clear();\r\n            }\r\n        });\r\n\r\n        wx.onSocketError(function (res) {\r\n           \r\n            if(WX_WebSocket.onError){\r\n                WX_WebSocket.onError(res);\r\n                WX_WebSocket.clear();\r\n            }\r\n        });\r\n\r\n        wx.onSocketMessage((res)=>{\r\n            if(WX_WebSocket.onMessage){\r\n                WX_WebSocket.onMessage(res.data);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public static send(msg: string | ArrayBuffer) {\r\n      \r\n        if (WX_WebSocket.socketOpen) {\r\n            wx.sendSocketMessage({\r\n                data: msg\r\n            })\r\n        } else {\r\n            WX_WebSocket.socketMsgQueue.push(msg)\r\n        }\r\n\r\n    }\r\n\r\n    public static close() {\r\n        if(WX_WebSocket.socketOpen){\r\n            WX_WebSocket.clear();\r\n            wx.closeSocket();\r\n        }\r\n       \r\n    }\r\n  \r\n    private static clear(){\r\n        WX_WebSocket.socketOpen = false;\r\n        WX_WebSocket.onClose=null;\r\n        WX_WebSocket.onMessage=null;\r\n        WX_WebSocket.onError=null;\r\n        WX_WebSocket.socketMsgQueue=[];\r\n        WX_WebSocket.socketCount=0;\r\n    }\r\n   \r\n\r\n    public static onMessage: (data: string | ArrayBuffer) => void;\r\n\r\n    public static onClose: (error?: Error) => void;\r\n\r\n    public static onError:(error?: Error) => void;\r\n\r\n    public static onOpen:() => void;\r\n}","\r\nexport class WX_XHR {\r\n\r\n    /**\r\n     * wx get json\r\n     * @param url \r\n     * @param success \r\n     * @param fail \r\n     */\r\n    public static getJSON(url: string, success: Function, fail: Function) {\r\n        wx.request({\r\n            url: url,\r\n            method: \"GET\",\r\n            responseType: \"text\",\r\n            success: function (res) {\r\n                if (success) success(res.data);\r\n            },\r\n            fail: function (res) {\r\n                console.error('wx get json fail');\r\n                if (fail) fail(res);\r\n            },\r\n        })\r\n    }\r\n\r\n\r\n    public static post(url: string,data:object, success: Function, fail: Function) {\r\n        wx.request({\r\n            url: url,\r\n            method: \"POST\",\r\n            responseType: \"text\",\r\n            data:data,\r\n            success: function (res) {\r\n                if (success) success(res.data);\r\n            },\r\n            fail: function (res) {\r\n                console.error('wx get json fail');\r\n                if (fail) fail(res);\r\n            },\r\n        })\r\n    }\r\n\r\n   public static post_Async(url:string,data:object):Promise<string>{\r\n       return new Promise<string>((resolve,reject)=>{\r\n        wx.request({\r\n            url: url,\r\n            method: \"POST\",\r\n            responseType: \"text\",\r\n            data:data,\r\n            success: function (res) {\r\n                if (resolve) resolve(res.data.toString());\r\n            },\r\n            fail: function (res) {\r\n                console.error('wx get json fail');\r\n                if (reject) reject(res);\r\n            },\r\n        })\r\n       });\r\n   }\r\n\r\n    /**\r\n     * wx get json 使用 Promise\r\n     * @param url \r\n     */\r\n    public static getJSON_Async(url: string): Promise<string> {\r\n        return new Promise<string>((resolve, reject) => {\r\n            wx.request({\r\n                url: url,\r\n                method: \"GET\",\r\n                responseType: \"text\",\r\n                success: function (res) {\r\n                    resolve(res.data.toString());\r\n                },\r\n                fail: function (res) {\r\n                    console.error('wx get json fail');\r\n                    reject(res);\r\n                },\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n}","import { ProtocolType, GameConfig } from \"../../../Core/GameConfig\";\r\n\r\n\r\n\r\n/**\r\n * web socket\r\n */\r\nexport class Web_WebSocket{\r\n\r\n    private static webSocket: WebSocket;\r\n   \r\n    private static socketOpen: boolean = false;\r\n\r\n    private static socketMsgQueue = [];\r\n\r\n    public static open(url: string) {\r\n      \r\n        let _webSocket = new WebSocket(url);\r\n        if(GameConfig.ProtocolType==ProtocolType.ByteBuffer){\r\n            _webSocket.binaryType = \"arraybuffer\";\r\n        }\r\n        _webSocket.onopen = (event: Event) => {\r\n            Web_WebSocket.socketOpen=true;\r\n            Web_WebSocket.webSocket = _webSocket;\r\n\r\n            for (let i = 0; i < Web_WebSocket.socketMsgQueue.length; i++) {\r\n                Web_WebSocket.send(Web_WebSocket.socketMsgQueue[i]);\r\n            }\r\n            Web_WebSocket.socketMsgQueue = [];\r\n            Web_WebSocket.onOpen();\r\n        };\r\n\r\n        _webSocket.onerror = (event: Event) => {\r\n            Web_WebSocket.socketOpen = false;\r\n            if(Web_WebSocket.onError){\r\n                Web_WebSocket.onError(event);\r\n            }\r\n        };\r\n\r\n        _webSocket.onmessage = (message: MessageEvent) => {\r\n            if(Web_WebSocket.onMessage){\r\n                Web_WebSocket.onMessage(message.data);\r\n            }\r\n        };\r\n\r\n        _webSocket.onclose = (event: CloseEvent) => {\r\n            Web_WebSocket.socketOpen = false;\r\n            if (Web_WebSocket.onClose) {\r\n                if (event.wasClean === false || event.code !== 1000) {\r\n                    Web_WebSocket.onClose(event);\r\n                } else {\r\n                    Web_WebSocket.onClose(event);\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n    }\r\n\r\n    public static send(msg: string | ArrayBuffer) {\r\n      \r\n        if (Web_WebSocket.socketOpen) {\r\n            Web_WebSocket.webSocket.send(msg);\r\n        } else {\r\n            Web_WebSocket.socketMsgQueue.push(msg)\r\n        }\r\n\r\n    }\r\n\r\n    public static close() {\r\n        Web_WebSocket.socketOpen = false;\r\n        Web_WebSocket.webSocket.close();\r\n    }\r\n\r\n    public static onMessage: (data: string | ArrayBuffer) => void;\r\n\r\n    public static onClose: (error?: any) => void;\r\n\r\n    public static onError:(error?: any) => void;\r\n  \r\n    public static onOpen:() => void;\r\n\r\n}","\r\n\r\nexport class Web_XHR {\r\n\r\n    /**\r\n     * get json\r\n     * @param url 地址\r\n     * @param success 成功执行\r\n     * @param fail  失败执行\r\n     */\r\n    public static getJSON(url: string, success: Function, fail: Function) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.responseType = 'json';\r\n        xhr.open('GET', url, true);\r\n        xhr.onload = function () {\r\n            if (xhr.status >= 200 && xhr.status < 300) {\r\n                if (success) success(xhr.response);\r\n            } else {\r\n                if (fail) fail(xhr.statusText);\r\n                console.error(xhr.statusText, xhr.status)\r\n            }\r\n        };\r\n        xhr.onerror = (ev:any) => {\r\n            console.error(`Error from HTTP request url=:${url} ${xhr.status}: ${xhr.statusText}`);\r\n            fail(ev);\r\n        };\r\n        xhr.ontimeout = (ev:any) => {\r\n            console.error(`Timeout from HTTP request.`);\r\n            fail(ev);\r\n        };\r\n        xhr.send();\r\n    }\r\n\r\n\r\n   /**\r\n     * get json\r\n     * @param url 地址\r\n     * @param success 成功执行\r\n     * @param fail  失败执行\r\n     */\r\n    public static post(url: string,data:object, success: Function, fail: Function) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.responseType = 'json';\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhr.open('post', url, true);\r\n        xhr.onload = function () {\r\n            if (xhr.status >= 200 && xhr.status < 300) {\r\n                if (success) success(xhr.response);\r\n            } else {\r\n                if (fail) fail(xhr.statusText);\r\n                console.error(xhr.statusText, xhr.status)\r\n            }\r\n        };\r\n        xhr.onerror = (ev:any) => {\r\n            console.error(`Error from HTTP request url=:${url} ${xhr.status}: ${xhr.statusText}`);\r\n            fail(ev);\r\n        };\r\n        xhr.ontimeout = (ev:any) => {\r\n            console.error(`Timeout from HTTP request.`);\r\n            fail(ev);\r\n        };\r\n        xhr.send(JSON.stringify(data));\r\n    }\r\n   \r\n    public static post_Async(url: string,data:object) :Promise<string>{\r\n        return new Promise<string>((resolve, reject)=>{\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.responseType = 'json';\r\n            xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n            xhr.open('post', url, true);\r\n            xhr.onload = function () {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    if (resolve) resolve(xhr.response);\r\n                } else {\r\n                    if (reject) reject(xhr.statusText);\r\n                    console.error(xhr.statusText, xhr.status)\r\n                }\r\n            };\r\n            xhr.onerror = (ev:any) => {\r\n                console.error(`Error from HTTP request url=:${url} ${xhr.status}: ${xhr.statusText}`);\r\n                reject(ev);\r\n            };\r\n            xhr.ontimeout = (ev:any) => {\r\n                console.error(`Timeout from HTTP request.`);\r\n                reject(ev);\r\n            };\r\n            xhr.send(JSON.stringify(data));\r\n        });\r\n       \r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *  get json 使用 Promise 方式\r\n     * @param url \r\n     */\r\n    public static getJSON_Async(url: string): Promise<string> {\r\n        return new Promise<string>((resolve, reject) => {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.responseType = 'text';\r\n            xhr.open('GET', url, true);\r\n            xhr.onload = () => {\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(xhr.responseText);\r\n                } else {\r\n                    console.error(xhr.statusText, xhr.status);\r\n                    reject(xhr);\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                console.log(`Error from HTTP request. ${xhr.status}: ${xhr.statusText}`);\r\n                reject(xhr);\r\n            };\r\n            xhr.ontimeout = () => {\r\n                console.log(`Timeout from HTTP request.`);\r\n                reject(xhr);\r\n            };\r\n            xhr.send();\r\n        });\r\n   }\r\n}\r\n\r\n","import { Web_XHR } from \"./XHR/Web_XHR\";\r\nimport { WX_XHR } from \"./XHR/WX_XHR\";\r\n\r\nimport { TT_XHR } from './XHR/TT_XHR';\r\nimport { GameConfig, PlatformType } from \"../../Core/GameConfig\";\r\n\r\n\r\nexport interface IXHR {\r\n\r\n    getJSON(url: string, success: Function, fail: Function);\r\n    getJSON_Async(url: string): Promise<string>;\r\n\r\n    post(url: string,data:object, success: Function, fail: Function);\r\n    post_Async(url: string,data:object): Promise<string>;\r\n}\r\n\r\n\r\nexport class XHRCreater {\r\n\r\n    public static createInstance(): IXHR {\r\n        switch (GameConfig.PlatformType) {\r\n            case PlatformType.Web:\r\n                return Web_XHR;\r\n            case PlatformType.WX:\r\n                return WX_XHR;\r\n            case PlatformType.TT:\r\n                return TT_XHR;\r\n            default:\r\n                return Web_XHR;\r\n        }\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/","file":"project.dev.js"}